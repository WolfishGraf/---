# -*- coding: utf-8 -*-
"""Опорные объекты.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1LDIFWUcXO7WnBmsVHnzQhMdQrIvVZFuG
"""

import pandas as pd
from sklearn.svm import SVC

"""1.	Загрузите выборку из файла svm-data.csv. В нем записана двумерная выборка (целевая переменная указана в первом столбце, признаки — во втором и третьем)."""

data = pd.read_csv('svm-data.csv', index_col=None, header=None)
data.head

svm_classes = data[0]
svm_observations = data.loc[:,1:]

"""2.	Обучите классификатор с линейным ядром, параметром C = 100000 и random_state=241. Такое значение параметра нужно использовать, чтобы убедиться, что SVM работает с выборкой как с линейно разделимой. При более низких значениях параметра алгоритм будет настраиваться с учетом слагаемого в функционале, штрафующего за маленькие отступы, из-за чего результат может не совпасть с решением классической задачи SVM для линейно разделимой выборки."""

clf = SVC(C=100000, kernel='linear', random_state=241)
clf.fit(svm_observations, svm_classes)

"""3.	Найдите номера объектов, которые являются опорными (нумерация с единицы). Они будут являться ответом на задание. Обратите внимание, что в качестве ответа нужно привести номера объектов в возрастающем порядке через запятую или пробел. Нумерация начинается с 1."""

support_indexes = clf.support_

str_support_indexes = [repr(i+1) for i in support_indexes]
resulting_string = " ".join(str_support_indexes)

file_answer = open("answer.txt", "w")
file_answer.write(resulting_string)
file_answer.close()