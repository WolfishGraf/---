# -*- coding: utf-8 -*-
"""Предобработка данных в Pandas-Clear.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1oWpIMOt56l8XEcSGavDK5olRn2W_iMVs

Данное задание направлено на знакомство с инструментарием, который пригодится в дальнейших практических заданиях.

### Вы научитесь:
* работать с данными используя язык Python и пакет Pandas
* делать предобработку данных
* находить простые закономерности в данных
### Введение
Сейчас Python является одним из наиболее распространенных языков программирования. Одним из его преимуществ является большое количество пакетов, решающих самые разные задачи. В нашем курсе мы рекомендуем использовать библиотеки Pandas, NumPy и SciPy, которые существенно упрощают чтение, хранение и обработку данных. В дальнейших работах вы также познакомитесь с пакетом Scikit-Learn, в котором реализованы многие алгоритмы машинного обучения.

### Начало работы
Для того, чтобы начать работать с данными, необходимо сначала загрузить их из файла. В данном задании мы будем работать с данными в формате CSV, предназначенном для хранения табличных данных: столбцы разделяются запятой, первая строка содержит имена столбцов.

Пример загрузки данных в Pandas:
"""

import pandas as pd
data = pd.read_csv('train.csv', index_col='PassengerId')

"""Данные будут загружены в виде DataFrame, с помощью которого можно удобно работать с ними. В данном случае параметр

index_col='PassengerId'
означает, что колонка PassengerId задает нумерацию строк данного датафрейма.

Для того, чтобы посмотреть что представляют из себя данные, можно воспользоваться несколькими способами:

* более привычным с точки зрения Python (если индекс указывается только один, то производится выбор строк):
"""

data[:10]

"""* или же воспользоваться методом датафрейма:"""

data.head(10)

"""Один из способов доступа к столбцам датафрейма — использовать квадратные скобки и название столбца:"""

data['Sex']

"""Для подсчета некоторых статистик (количества, среднее, максимум, минимум) можно также использовать методы датафрейма:"""

data['Sex'].value_counts()

"""1.Какое количество мужчин и женщин ехало на корабле? """

data['Sex'].value_counts()

"""2.Какой части пассажиров удалось выжить? Посчитайте долю выживших пассажиров. """

x = data['Survived'].count()
y = data['Survived'].sum()
print(y/x)

"""3.Какую долю пассажиры первого класса составляли среди всех пассажиров?"""

data['FirstClassCounter'] = 0 #добавляем колонку со значением по умолчанию
mask=data['Pclass'] == 1 #маска выборки, берем 1 класс
data.loc[mask,'FirstClassCounter']=1 #выборка по колонке это наш счётчик
firstClassCounter= data['FirstClassCounter'].sum()
print(firstClassCounter/x)

"""4. Какого возраста были пассажиры? Посчитайте среднее и медиану возраста пассажиров."""

print(data['Age'].mean())

print(data['Age'].median())

"""5. Коррелируют ли число братьев/сестер/супругов с числом родителей/детей? Посчитайте корреляцию Пирсона между признаками SibSp и Parch."""

df = pd.DataFrame(data = data, columns = ['SibSp','Parch'] )
print(df.corr().loc['SibSp','Parch'])

"""6. Какое самое популярное женское имя на корабле? Извлеките из полного имени пассажира (колонка Name) его личное имя (First Name). Это задание — типичный пример того, с чем сталкивается специалист по анализу данных. Данные очень разнородные и шумные, но из них требуется извлечь необходимую информацию. Попробуйте вручную разобрать несколько значений столбца Name и выработать правило для извлечения имен, а также разделения их на женские и мужские."""

#Your code

NameExtract = data['Name'].str.extract('^.+?Mrs\..+?\((.+?)\)|^.+?Miss\.\s([\w\s]+)',expand=False) #первичное преобразование
NameExtract.fillna('',inplace=True) #заменяем NULL на пустую строку
NameExtract.columns = ['Mrs','Miss'] #переименуем колонки
NameExtract['CombinedName']=NameExtract.apply(lambda x:'%s%s' % (x['Mrs'],x['Miss']),axis=1) #соединяем в одну колонку
NameExtract.drop(['Mrs','Miss'],axis=1,inplace=True) #удаляем ненужные колонки

femalenames=[]
#обрабатываем список имен
for i in range(NameExtract.CombinedName.count()):
    names=NameExtract.loc[i+1,'CombinedName']
    words=names.split(' ')
    for word in words:
        if len(word)>2 and word.find('"'):
            femalenames.append(word)
    
femalenamesDataFrame=pd.DataFrame(data=femalenames,columns=['Names']) #получаем из листа датасет
femalenamesDataFrame['count']= 1 #колонка счетчик
femalenamesDataFrameGroupBy=femalenamesDataFrame.groupby('Names').sum() #группируем по имени и суммируем счетчик
femalenamesDataFrameSorted=femalenamesDataFrameGroupBy.sort_values(['count'], ascending=[False]) #сортируем по счетчику в порядке убывания
print(femalenamesDataFrameSorted.head()) #показываем часто встечаемое имя

